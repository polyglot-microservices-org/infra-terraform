name: Deploy Infrastructure

on:
  workflow_dispatch:  # manual trigger
  push:
    paths:
      - "terraform/**"
      - "scripts/**"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Debug: verify folder structure
      - name: Debug workspace
        run: |
          pwd
          ls -R

      # 3Ô∏è‚É£ Configure AWS CLI
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      # 4Ô∏è‚É£ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      # 6Ô∏è‚É£ Acquire DynamoDB lock
      - name: Acquire lock
        run: |
          aws dynamodb put-item \
            --table-name terraform-state-locks \
            --item '{"LockID":{"S":"terraform-lock"}}' \
            --condition-expression "attribute_not_exists(LockID)"

      # 7Ô∏è‚É£ Download state from S3
      - name: Download state
        run: |
          cd terraform
          aws s3 cp s3://mitta-terraform-state-bucket/terraform.tfstate . || echo "No existing state"

      # 8Ô∏è‚É£ Terraform Init
      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      # 9Ô∏è‚É£ Terraform Apply
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var="aws_region=${{ secrets.AWS_REGION }}" \
            -var="gh_pat=${{ secrets.GH_PAT }}" \
            -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      # üîü Upload state to S3
      - name: Upload state
        run: |
          cd terraform
          aws s3 cp terraform.tfstate s3://mitta-terraform-state-bucket/

      # 1Ô∏è‚É£1Ô∏è‚É£ Release DynamoDB lock
      - name: Release lock
        if: always()
        run: |
          aws dynamodb delete-item \
            --table-name terraform-state-locks \
            --key '{"LockID":{"S":"terraform-lock"}}' || true
